import { fetchComToken } from "../../utils/utils.js";

// Evento de submit do formulÃ¡rio de login
document.getElementById("Login").addEventListener("submit", async function (e) {
  e.preventDefault();

  const email = document.getElementById("emailusuario").value.trim();
  const password = document.getElementById("senha").value;

  if (!email || !password) {
    alert("Por favor, preencha todos os campos.");
    return;
  }

  try {
    const response = await fetch("/auth/login", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ email, senha: password })
    });

    if (!response.ok) {
      const erro = await response.json();
      return Swal.fire({ icon: 'error', title: 'Falha no login', text: erro.erro || 'Erro ao realizar login.' });
    }

    const dados = await response.json();
    const { token, idusuario, empresas, idempresaDefault } = dados;

    console.log("token, idusuario", token, idusuario);

    // Limpa storage e salva dados do usuÃ¡rio
    localStorage.clear();
    localStorage.setItem("token", token);
    localStorage.setItem("idusuario", idusuario);    
    localStorage.setItem("empresas", JSON.stringify(empresas));

    Â  Â  // ðŸ“Œ Encontra a empresa padrÃ£o na lista de empresas do usuÃ¡rio
Â  Â  const empresaDefaultInfo = empresas.find(emp => emp.id === idempresaDefault);

Â  Â  // ðŸ“Œ Verifica se a empresa padrÃ£o existe e se estÃ¡ ativa
Â  Â  if (empresaDefaultInfo && empresaDefaultInfo.ativo) {
Â  Â  Â  localStorage.setItem("idempresa", idempresaDefault);

Â  Â  Â  // RequisiÃ§Ã£o para buscar o tema da empresa, usando o `idempresaDefault`
Â  Â  Â  const empresaDefaultResponse = await fetchComToken(`/aside/empresasTema/${idempresaDefault}`);
Â  Â  
Â  Â  Â  if (!empresaDefaultResponse.ok) {
Â  Â  Â  Â  Â  console.error("NÃ£o foi possÃ­vel buscar os dados da empresa padrÃ£o.");
Â  Â  Â  Â  Â  // Em caso de falha, redireciona para a pÃ¡gina de seleÃ§Ã£o
Â  Â  Â  Â  Â  window.location.href = "OPER-index.html"; 
Â  Â  Â  Â  Â  return;
Â  Â  Â  }
Â  Â  
Â  Â  Â  const empresaDefaultData = await empresaDefaultResponse.json();
Â  Â  Â  const nmfantasia = empresaDefaultData.nmfantasia;

Â  Â  Â  // ConstrÃ³i a URL dinamicamente e redireciona
Â  Â  Â  const pagina = `${nmfantasia.replace(/ /g, '').toUpperCase()}-index.html`;
Â  Â  Â  window.location.href = pagina;
Â  Â  } else {
Â  Â  Â  // Se a empresa padrÃ£o nÃ£o existir ou estiver inativa, limpa o localStorage
Â  Â  Â  // e redireciona para a pÃ¡gina de seleÃ§Ã£o.
Â  Â  Â  localStorage.removeItem("idempresa"); 
Â  Â  Â  localStorage.removeItem("permissoes");
Â  Â  Â  console.log("Empresa padrÃ£o nÃ£o encontrada ou inativa. Redirecionando para pÃ¡gina de seleÃ§Ã£o.");
Â  Â  Â  window.location.href = "OPER-index.html";
Â  Â  }

    // if (idempresaDefault) {
    //   localStorage.setItem("idempresa", idempresaDefault);  
    // } else {
    //   localStorage.removeItem("idempresa"); 
    //   localStorage.removeItem("permissoes");
    //   window.location.href = "OPER-index.html";
    //     return;
    // }


    // // ðŸ”¹ Mapeamento de idempresa â†’ pÃ¡gina
    // // const paginas = {
    // //   1: "OPER-index.html",
    // //   2: "ES-index.html",
    // //   3: "EA-index.html",
    // //   4: "EP-index.html",
    // //   5: "SNFOODS-index.html",
    // //   6: "TSD-index.html"
    // // };
    // console.log("IDEmpresaDefault:", idempresaDefault);
    // const empresaDefaultResponse = await fetchComToken(`/aside/empresasTema/${idempresaDefault}`);
    // //   method: "GET",
    // //   headers: {
    // //     "Content-Type": "application/json",
    // //     "Authorization": `Bearer ${token}` // Passa o token na requisiÃ§Ã£o
    // //   }
    // // });
   
    // // // Se a empresa for vÃ¡lida, abre a pÃ¡gina correspondente
    // // if (idempresaDefault && paginas[idempresaDefault]) {
    // //   window.location.href = paginas[idempresaDefault];
    // //   return;
    // // }

    // // // Caso nÃ£o tenha empresa default ou nÃ£o esteja mapeada â†’ pÃ¡gina padrÃ£o
    // // window.location.href = "OPER-index.html";
    // console.log("Empresa default response:", empresaDefaultResponse);

    // if (!empresaDefaultResponse.ok) {
    //     console.error("NÃ£o foi possÃ­vel buscar os dados da empresa default.");
    //     // Em caso de falha, redireciona para uma pÃ¡gina genÃ©rica
    //     window.location.href = "OPER-index.html";
    //     return;
    // }
    
    // const empresaDefaultData = await empresaDefaultResponse.json();
    // const nmfantasia = empresaDefaultData.nmfantasia;

    // // âœ… CONSTRUÃ‡ÃƒO DINÃ‚MICA DA URL
    // const pagina = `${nmfantasia.replace(/ /g, '').toUpperCase()}-index.html`;

    // console.log(`Redirecionando para: ${pagina}`);
    // window.location.href = pagina;

  

  } catch (err) {
    console.error("Erro no login:", err);
    Swal.fire({ icon: 'error', title: 'Erro Inesperado', text: 'Erro ao tentar fazer login.' });
  }
});

// BotÃ£o de login alternativo
document.getElementById("btnEntrar").addEventListener("click", function (e) {
  e.preventDefault();
  document.getElementById("btnEntrarReal").click();
});

